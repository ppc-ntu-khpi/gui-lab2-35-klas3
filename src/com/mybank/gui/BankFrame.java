/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mybank.gui;

import com.mybank.data.DataSource;
import com.mybank.domain.Account;
import com.mybank.domain.Bank;
import com.mybank.domain.CheckingAccount;
import com.mybank.domain.Customer;
import com.mybank.domain.SavingsAccount;
import javax.swing.JOptionPane;

/**
 *
 * @author Xiaomi
 */
public class BankFrame extends javax.swing.JFrame {

    /**
     * Creates new form Bank
     */
    public BankFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        reportButton = new javax.swing.JButton();
        showButton = new javax.swing.JButton();
        aboutButton = new javax.swing.JButton();
        customers = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        info = new javax.swing.JEditorPane();
        depositButton = new javax.swing.JButton();
        withDrawButton = new javax.swing.JButton();
        accountType = new javax.swing.JComboBox<>();
        textField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("My Bank Clients");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        reportButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        reportButton.setText("Report");
        reportButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reportButtonActionPerformed(evt);
            }
        });

        showButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        showButton.setText("Show");
        showButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showButtonActionPerformed(evt);
            }
        });

        aboutButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        aboutButton.setText("About");
        aboutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutButtonActionPerformed(evt);
            }
        });

        customers.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        info.setEditable(false);
        info.setContentType("text/html"); // NOI18N
        info.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jScrollPane2.setViewportView(info);

        depositButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        depositButton.setText("Deposit");
        depositButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                depositButtonActionPerformed(evt);
            }
        });

        withDrawButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        withDrawButton.setText("Withdraw");
        withDrawButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                withDrawButtonActionPerformed(evt);
            }
        });

        accountType.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        accountType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Checking", "Savings" }));

        textField.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(customers, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 373, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(showButton, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                    .addComponent(aboutButton, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                    .addComponent(reportButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(withDrawButton, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                    .addComponent(depositButton, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                    .addComponent(accountType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(textField))
                .addGap(37, 37, 37))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(customers, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(showButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(reportButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(aboutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                        .addComponent(accountType, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(textField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9)
                        .addComponent(depositButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(withDrawButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void aboutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutButtonActionPerformed
        JOptionPane.showMessageDialog(this, "This is GUI for working with bank's customers.");
    }//GEN-LAST:event_aboutButtonActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        try {
            (new DataSource("data/test.dat")).loadData();
            for (int i = 0; i < Bank.getNumberOfCustomers(); i++) {
                Customer customer = Bank.getCustomer(i);
                customers.addItem(
                    (new StringBuilder())
                    .append(customer.getFirstName())
                    .append(" ")
                    .append(customer.getLastName())
                    .toString()
                );
            }
            setCustomersOperationsVisibility(false);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }//GEN-LAST:event_formWindowOpened

    private void showButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showButtonActionPerformed
        info.setText(getCustomerInfo(Bank.getCustomer(customers.getSelectedIndex())));
        setCustomersOperationsVisibility(true);
    }//GEN-LAST:event_showButtonActionPerformed

    private void reportButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportButtonActionPerformed
        StringBuilder report = new StringBuilder();

        for (int i = 0; i < Bank.getNumberOfCustomers(); i++) {
            report.append(getCustomerInfo(Bank.getCustomer(i)));
        }
        
        setCustomersOperationsVisibility(false);
        info.setText(report.toString());
    }//GEN-LAST:event_reportButtonActionPerformed

    private void depositButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_depositButtonActionPerformed
        handleAccountOperation("deposit");
    }//GEN-LAST:event_depositButtonActionPerformed

    private void withDrawButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_withDrawButtonActionPerformed
        handleAccountOperation("withdraw");
    }//GEN-LAST:event_withDrawButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BankFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BankFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BankFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BankFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BankFrame().setVisible(true);
            }
        });
    }
    
    private void setCustomersOperationsVisibility(boolean visibility) {
        accountType.setVisible(visibility);
        textField.setVisible(visibility);
        withDrawButton.setVisible(visibility);
        depositButton.setVisible(visibility);
    }
    
    private String getCustomerInfo(Customer customer) {
        StringBuilder info = new StringBuilder();
        
        info.append("<br>&nbsp;<b><span style=\"font-size:18px\">")
            .append(customer.getLastName())
            .append(", ")
            .append(customer.getFirstName())
            .append("</span><br><hr>");
        
        for (int i = 0; i < customer.getNumberOfAccounts(); i++) {
            Account account = customer.getAccount(i);
            
            info.append("&nbsp;<b>Acc Type: </b>")
                .append(account instanceof CheckingAccount ? "Checking" : "Savings")
                .append("<br>&nbsp;<b>Balance: <span style=\"color:red;\">$")
                .append(account.getBalance())
                .append("</span></b><br>");
        }
        
        return info.toString();
    }
    
    private void handleAccountOperation(String operationType) {
        try {
            Customer customer = Bank.getCustomer(customers.getSelectedIndex());

            for (int i = 0; i < customer.getNumberOfAccounts(); i++) {
                Account account = customer.getAccount(i);

                if ((accountType.getSelectedItem() == "Checking" && account instanceof CheckingAccount) ||
                    (accountType.getSelectedItem() == "Savings" && account instanceof SavingsAccount)) {
                    if (operationType.equals("deposit")) {
                        account.deposit(Double.parseDouble(textField.getText()));
                    } else if (operationType.equals("withdraw")) {
                        account.withdraw(Double.parseDouble(textField.getText()));
                    }
                    
                    JOptionPane.showMessageDialog(info, "Operation succeeded.");
                    return;
                }
            }

            JOptionPane.showMessageDialog(info, "Customer doesn't have this type of account.");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(info, "This operation could not be completed due to invalid input.");
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton aboutButton;
    private javax.swing.JComboBox<String> accountType;
    private javax.swing.JComboBox<String> customers;
    private javax.swing.JButton depositButton;
    private javax.swing.JEditorPane info;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton reportButton;
    private javax.swing.JButton showButton;
    private javax.swing.JTextField textField;
    private javax.swing.JButton withDrawButton;
    // End of variables declaration//GEN-END:variables
}
